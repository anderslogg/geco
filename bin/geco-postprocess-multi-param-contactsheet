#!/usr/bin/env python

'''
geco-postprocess-multi-pa

A script to compute velocity of particles as a function of radius

Required files: RHO_comp_i.xml.gz, mesh.xml.gz

Usage:

with setup.py installed in a docker container run

geco-postprocess-rotation_curves

from the directory that contains the solution directory(ies).
All subdirectories are assumed to have the same number of matter-species

'''
import geco_utils as gu
import argparse
import matplotlib.pyplot as plt
import matplotlib.gridspec as gridspec
import os
from itertools import izip

def contact_sheet(row, r_max, res):
    subdir = os.getcwd()
    #print(subdir)
    folder_name = subdir.split('/')[-2]
    #print(folder_name)
    mesh, parameters, components, U,V = gu.GatherFiles(subdir)
    components.remove(components[0])

    param_str=""
    if (len(parameters) == 1):
        param_str = gu.GetParametersStrings(parameters[0])

    rho_arrays = list(map(gu.ToNumpyArray, components))
    title_list = list(map(gu.GetTitle, parameters))

    for params,rho in izip(title_list, components):
        rho = gu.ToNumpyArray(rho,r_max,res)



    for i in range(len(components)):
        f = fig.add_subplot(gs[row,i])
        f.imshow(rho_arrays[i], cmap='gist_heat', origin='lower', extent=(0,r_max,0,r_max))
        f.set_title(title_list[i], fontsize=10)


    if (len(rho_arrays) == 1):
        t = plt.text(r_max*1.5, r_max/10, param_str, fontsize=12)


###########################################################

parser = argparse.ArgumentParser()
parser.add_argument('-r', '--resolution', help="enter desired resolution of numpy arrays",
                        type=int, required=False)
args=vars(parser.parse_args())

res = 150 if args['resolution'] is None else args['resolution']

file_list, dir_list = gu.FilesDirsByName('mesh.xml.gz')

#Set up figure and spacing
fig = plt.figure(figsize=(6,len(dir_list)*3.5))
gs = gridspec.GridSpec(len(dir_list), 2)
gs.update(wspace=0.5, hspace=0.25)


r_max = gu.MaxSupport()
row=0
top = os.getcwd()
for d in dir_list:
    print(os.getcwd())
    os.chdir(d)
    print(os.getcwd())
    contact_sheet(row, r_max, res)
    row=row+1
    os.chdir(top)

fig.savefig("multi_param.png")
