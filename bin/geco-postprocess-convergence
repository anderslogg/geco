#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# This is a utility script for plotting the convergence of the
# residual. Usage: geco-postprocess-convergence residuals.csv.

import sys

import pylab as pl

# Get filename
if not len(sys.argv) >= 2:
    print("Usage: geco-postprocess-convergence residuals.csv")
    sys.exit(1)
filename = sys.argv[1]

# Check whether theta is given
if len(sys.argv) == 3:
    theta = float(sys.argv[2])
else:
    theta = None

# Read residuals
with open(filename, 'r') as f:
    r = [float(x) for x in f.read().split(',')]

# Estimate convergence rate
n = len(r)
k = range(n)
h = int(n/2)
p = pl.polyfit(k[h:], pl.log(r[h:]), 1)
L = pl.exp(p[0]) # Lipschitz-constant
K = range(int(1.1*n))
R = pl.exp(p[1])*L**K
   
# Plot residuals
pl.semilogy(k, r, 'r-o')
pl.semilogy(K, R, '--')
if theta is None:
    pl.title("Convergence of residual: L = %.3g" % L)
else:
    pl.title("Convergence of residual: L = %.3g theta = %g" % (L, theta))
pl.xlabel("Iteration")
pl.ylabel("Residual")
pl.grid(True)
pl.savefig("convergence_of_residual.png")
pl.show()
