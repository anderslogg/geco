#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# This is a utility script for generating point cloud data from an
# already existing density (RHO). This (was) mainly useful before
# point cloud output was added to the solvers. It can also be useful
# to regenerate point cloud data with a different number of points.

import sys, os
from fenics import *
from geco import *
from geco.models import PointCloud

# Parameters
num_points = 1000000
resolution = 64
mass = 1.0
size = 18

# Find RHO datafile
files = [f for f in os.listdir(".") if "RHO_" in f and f.endswith(".xml.gz")]
if not len(files) == 1:
    error("Unable to find XML data for RHO.")
data_filename = files[0]

# Find mesh datafile
mesh_filename = "mesh.xml.gz"

# Read mesh and create function space
info("Reading mesh from file %s." % mesh_filename)
mesh = Mesh(mesh_filename)
V = FunctionSpace(mesh, "Lagrange", 1)

# Read data for RHO
info("Reading data from file %s." % data_filename)
RHO = Function(V)
File(data_filename) >> RHO

# Create point cloud representation
info("Computing point cloud representation.")
cloud = PointCloud(RHO, size, mass, resolution, num_points)

# Save to file
filename = "postprocess-3d-pointcloud-box.xdmf"
cloud.save_data(filename)
info("Postprocessing data save to file %s" % filename)
